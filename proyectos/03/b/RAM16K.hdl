// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
   
       //Se usa un DMux4Way ya que la cantidad de bits usados por el 8Way termina dejando la RAM4k con un bit faltante, ademas la RAM16K es de 16384 bits
       //16384/4 nos da un total de 4096,  que es la cantidad exacta de memoria de la RAM4K.
     
    DMux4Way(in=load,sel=address[0..1],a=out0,b=out1,c=out2,d=out3);
    
    RAM4K(in=in,load=out0,address=address[2..13],out=ext0);
    RAM4K(in=in,load=out1,address=address[2..13],out=ext1);
    RAM4K(in=in,load=out2,address=address[2..13],out=ext2);
    RAM4K(in=in,load=out3,address=address[2..13],out=ext3);

    Mux4Way16(a=ext0,b=ext1,c=ext2,d=ext3,sel=address[0..1],out=out);
    
}