// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load,sel=address[0..2],a=out0,b=out1,c=out2,d=out3,e=out4,f=out5,g=out6,h=out7);
    
    RAM64(in=in,load=out0,address=address[3..8],out=ext0);
    RAM64(in=in,load=out1,address=address[3..8],out=ext1);
    RAM64(in=in,load=out2,address=address[3..8],out=ext2);
    RAM64(in=in,load=out3,address=address[3..8],out=ext3);
    RAM64(in=in,load=out4,address=address[3..8],out=ext4);
    RAM64(in=in,load=out5,address=address[3..8],out=ext5);
    RAM64(in=in,load=out6,address=address[3..8],out=ext6);
    RAM64(in=in,load=out7,address=address[3..8],out=ext7);

    Mux8Way16(a=ext0,b=ext1,c=ext2,d=ext3,e=ext4,f=ext5,g=ext6,h=ext7,sel=address[0..2],out=out);
    
}