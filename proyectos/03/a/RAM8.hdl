// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    //Chip DMux de 8 caminos para conocer a cual posicion de memoria o a cual register se esta dirigiendo el address
    DMux8Way(in=load,sel=address,a=in1,b=in2,c=in3,d=in4,e=in5,f=in6,g=in7,h=in8);
    
    Register(in=in,load=in1,out=dir0);
    Register(in=in,load=in2,out=dir1);
    Register(in=in,load=in3,out=dir2);
    Register(in=in,load=in4,out=dir3);
    Register(in=in,load=in5,out=dir4);
    Register(in=in,load=in6,out=dir5);
    Register(in=in,load=in7,out=dir6);
    Register(in=in,load=in8,out=dir7);
    
    //Chip Mux de 8 caminos de 16 bits para saber cual register es el que esta sacando la salida correcta 
    Mux8Way16(a=dir0,b=dir1,c=dir2,d=dir3,e=dir4,f=dir5,g=dir6,h=dir7,sel=address,out=out);
        
    
}