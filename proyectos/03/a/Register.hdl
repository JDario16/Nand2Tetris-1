// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/Register.hdl

/**
 * 16-bit register:
 * If load[t] == 1 then out[t+1] = in[t]
 * else out does not change
 */

CHIP Register {
    IN in[16], load;
    OUT out[16];

    PARTS:
    // Put your code here:
    Mux16(a[0]=dir1,b=in,sel=load,out[0]=dir2);
    DFF(in=dir2,out=dir1,out=out[0]);
    
    Mux16(a[1]=dir3,b=in,sel=load,out[1]=dir4);
    DFF(in=dir4,out=dir3,out=out[1]);
    
    Mux16(a[2]=dir5,b=in,sel=load,out[2]=dir6);
    DFF(in=dir6,out=dir5,out=out[2]);
    
    Mux16(a[3]=dir7,b=in,sel=load,out[3]=dir8);
    DFF(in=dir8,out=dir7,out=out[3]);
    
    Mux16(a[4]=dir9,b=in,sel=load,out[4]=dir10);
    DFF(in=dir10,out=dir9,out=out[4]);
    
    Mux16(a[5]=dir11,b=in,sel=load,out[5]=dir12);
    DFF(in=dir12,out=dir11,out=out[5]);
    
    Mux16(a[6]=dir13,b=in,sel=load,out[6]=dir14);
    DFF(in=dir14,out=dir13,out=out[6]);
    
    Mux16(a[7]=dir15,b=in,sel=load,out[7]=dir16);
    DFF(in=dir16,out=dir15,out=out[7]);
    
    Mux16(a[8]=dir17,b=in,sel=load,out[8]=dir18);
    DFF(in=dir18,out=dir17,out=out[8]);

    Mux16(a[9]=dir19,b=in,sel=load,out[9]=dir20);
    DFF(in=dir20,out=dir19,out=out[9]);

    Mux16(a[10]=dir21,b=in,sel=load,out[10]=dir22);
    DFF(in=dir22,out=dir21,out=out[10]);

    Mux16(a[11]=dir23,b=in,sel=load,out[11]=dir24);
    DFF(in=dir24,out=dir23,out=out[11]);

    Mux16(a[12]=dir25,b=in,sel=load,out[12]=dir26);
    DFF(in=dir26,out=dir25,out=out[12]);

    Mux16(a[13]=dir27,b=in,sel=load,out[13]=dir28);
    DFF(in=dir28,out=dir27,out=out[13]);

    Mux16(a[14]=dir29,b=in,sel=load,out[14]=dir30);
    DFF(in=dir30,out=dir29,out=out[14]);

    Mux16(a[15]=dir31,b=in,sel=load,out[15]=dir32);
    DFF(in=dir32,out=dir31,out=out[15]);
    
    
}
